#Set your working directory
setwd("/home/sophie/16s")

#Import your sequence data into R and list your files 
vaginal_data <- "/home/sophie/16s"
list.files(vaginal_data)
print(vaginal_data)

#Load the necessary packages
library(dada2)
packageVersion("dada2")
library(phyloseq)
packageVersion("phyloseq")

#Match the forward and reverse files
fnFs <- sort(list.files(vaginal_data, pattern = "_1.fq", full.names = TRUE))
fnRs <- sort(list.files(vaginal_data, pattern = "_2.fq", full.names = TRUE))
print(fnFs)
print(fnRs)

#Extract the unique sample ID from your sample names
sample.names <- sapply(strsplit(basename(fnFs), "_"), `[`, 3)

#Plot the sequence quality profiles of your fastq files
plotQualityProfile(fnFs[1:5])
plotQualityProfile(fnRs[1:5])

#Create a directory of your filtered files  
filtFs <- file.path(vaginal_data, "filtered", paste0(sample.names, "_F_filt.fq.gz"))
filtRs <- file.path(vaginal_data, "filtered", paste0(sample.names, "_R_filt.fq.gz"))
names(filtFs) <- sample.names
names(filtRs) <- sample.names

#Filter and trim poor read sequences, ambiguous base calls and sequencing controls if any 
out <- filterAndTrim(fnFs, filtFs, fnRs, filtRs, truncLen=c(110,90), maxN=0, maxEE=c(2,2), truncQ=2, compress=TRUE, multithread=TRUE)
head(out)
View(out)

#Plot the error rates of your filtered files
errF <- learnErrors(filtFs, multithread = TRUE)
errR <- learnErrors(filtRs, multithread = TRUE)
plotErrors(errF, nominalQ = TRUE)
plotErrors(errR, nominalQ = TRUE)

#Apply the sample inferencing algorithm to show the unique sequences you have per sample
dadaFs <- dada(filtFs, err=errF, multithread = TRUE)
dadaRs <- dada(filtRs, err=errR, multithread = TRUE)
dadaFs[[1]]
dadaRs[[1]]

#Merge the paired end forward and reverse reads together
mergers <- mergePairs(dadaFs, filtFs, dadaRs, filtRs, verbose = TRUE)
head(mergers[[1]])

#Construct a sequence table of amplicon sequence variants (ASVs)
seqtab <- makeSequenceTable(mergers)
dim(seqtab)
table(nchar(getSequences(seqtab)))

#Eliminate chimeras from your sequence data, these occur when unrelated sequences hybridize during PCR
seqtab.nochim <- removeBimeraDenovo(seqtab, method = "consensus", multithread = TRUE, verbose = TRUE)

#Assign taxonomy. At first I got a lot of Eukaryota NA assignments so I assigned taxonomy using the reverse complement function
taxa <- assignTaxonomy(seqtab.nochim, "/home/sophie/Downloads/silva_nr_v132_train_set.fa", multithread = TRUE, tryRC = TRUE) 
taxa.print <- taxa
rownames(taxa.print) <- NULL
head(taxa.print)

#Assign species
taxa <- addSpecies(taxa, "silva_species_assignment_v132.fa.gz")
